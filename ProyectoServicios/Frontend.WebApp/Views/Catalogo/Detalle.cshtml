@model Shared.Models.InmuebleDto
@{
    Layout = null;

    var precioRaw = Model.PrecioPorNoche.ToString(System.Globalization.CultureInfo.InvariantCulture); // "450.00"
    var precioDisplay = Model.PrecioPorNoche.ToString("N2"); // "450.00" con formato
    var latStr = Model.Latitud?.ToString(System.Globalization.CultureInfo.InvariantCulture);
    var lngStr = Model.Longitud?.ToString(System.Globalization.CultureInfo.InvariantCulture);
}

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container mt-4">
    <h3 class="mb-3">Monterrico Polo Aparts - @Model.Nombre</h3>

    <div class="row">
        <!-- Imagen -->
        <div class="col-md-8">
            @if (!string.IsNullOrEmpty(Model.ImagenHabitacion))
            {
                <img src="@Model.ImagenHabitacion" alt="Imagen del inmueble"
                     class="img-fluid rounded mb-4" style="max-height:420px;object-fit:cover;" />
            }
            else
            {
                <div class="alert alert-secondary">No hay imagen disponible.</div>
            }
        </div>

        <!-- Precio / reservas -->
        <div class="col-md-4">
            <div class="border rounded p-3">
                <h6 class="text-muted mb-1">Desde</h6>
                <h4>S/ <span id="precioPorNoche">@precioDisplay</span></h4>
                <input type="hidden" id="precioPorNocheRaw" value="@precioRaw" />
                <p class="text-muted">Por noche</p>

                <div class="mb-2">
                    <label class="form-label">Entrada</label>
                    <input type="text" id="entrada" class="form-control mb-2" autocomplete="off" />
                    <label class="form-label">Salida</label>
                    <input type="text" id="salida" class="form-control mb-3" autocomplete="off" />
                </div>

                <p><strong>Total:</strong> S/ <span id="precioTotal">0.00</span></p>

                <form asp-controller="Pago" asp-action="CrearCheckoutSession" method="post" id="formPago">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="fechaInicio" id="fechaInicioInput" />
                    <input type="hidden" name="fechaFin" id="fechaFinInput" />
                    <input type="hidden" name="total" id="totalInput" />
                    <input type="hidden" name="inmuebleId" value="@Model.IdInmueble" />
                    <input type="hidden" name="nombreInmueble" value="@Model.Nombre" />

                    <div class="form-check mb-3 d-flex align-items-center gap-2">
                        <input class="form-check-input" type="checkbox" id="aceptoTerminos" />
                        <label class="form-check-label" for="aceptoTerminos" style="margin-top:2px;">
                            Acepto los <a asp-controller="Catalogo" asp-action="Terminos" target="_blank">Términos y Condiciones</a>.
                        </label>
                    </div>

                    <button type="submit" class="btn btn-success w-100" id="btnPagar">Pagar con tarjeta</button>
                </form>
            </div>
        </div>
    </div>

    <hr class="my-4" />

    <!-- Información -->
    <div class="row">
        <div class="col-md-6">
            <p><strong>Capacidad:</strong> @Model.Capacidad personas</p>
            <p><strong>Habitaciones:</strong> @Model.NumeroHabitaciones</p>
            <p><strong>Servicios incluidos:</strong> @Model.ServiciosIncluidos</p>
        </div>
        <div class="col-md-6">
            <p>
                <strong>Disponibilidad:</strong>
                <span class="@(Model.Disponibilidad == "Si" ? "text-success" : "text-danger")">
                    @Model.Disponibilidad
                </span>
            </p>
        </div>
    </div>

    <!-- Mapa -->
    @if (Model.Latitud.HasValue && Model.Longitud.HasValue)
    {
        <div class="mt-4">
            <p><strong>Ubicación en el Mapa</strong></p>
            <div id="map" style="height:400px;border:1px solid #ddd;border-radius:8px;"></div>
        </div>
    }
    else
    {
        <p class="text-muted"><em>Este inmueble no tiene ubicación registrada</em></p>
    }

    <div class="mt-4">
        <a asp-controller="Catalogo" asp-action="ListarInmuebles" class="btn btn-outline-secondary">← Volver al catálogo</a>
    </div>
</div>

<!-- Google Maps -->
<script>
    const lat = parseFloat('@(latStr ?? "")');
    const lng = parseFloat('@(lngStr ?? "")');
    window.initMap = function () {
        if (isNaN(lat) || isNaN(lng)) return;
        const ubicacion = { lat: lat, lng: lng };
        const map = new google.maps.Map(document.getElementById("map"), { zoom: 15, center: ubicacion });
        new google.maps.Marker({ position: ubicacion, map: map, title: "@Model.Nombre" });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCc1pV5K0s9Z7xGUUU03n6zBhKemKLiRx8&callback=initMap&v=weekly&loading=async" defer></script>

<!-- Flatpickr + Fechas Ocupadas + Validación -->
<script>
    const idInmueble = @Model.IdInmueble;
    let salidaPicker;

    function calcularTotal() {
      const entradaStr = document.getElementById('entrada').value;
      const salidaStr  = document.getElementById('salida').value;

      // precio SIN formato, siempre con punto
      const precioNoche = parseFloat(document.getElementById('precioPorNocheRaw').value);

      if (entradaStr && salidaStr) {
        const e = new Date(entradaStr);
        const s = new Date(salidaStr);
        if (s > e) {
          const dias = (s - e) / (1000*60*60*24);
          document.getElementById('precioTotal').textContent = (dias * precioNoche).toFixed(2);
          return;
        }
      }
      document.getElementById('precioTotal').textContent = '0.00';
    }

    document.addEventListener("DOMContentLoaded", function () {
      fetch(`/Catalogo/FechasOcupadas/${idInmueble}`)
        .then(r => r.json())
        .then(disables => {
          // tip: console.log(disables) para ver lo que viene del API
          const entrada = flatpickr("#entrada", {
            minDate: "today",
            dateFormat: "Y-m-d",
            disable: disables,
            onChange: function(_, dateStr) {
              if (salidaPicker) salidaPicker.set("minDate", dateStr || "today");
              calcularTotal();
            }
          });
          salidaPicker = flatpickr("#salida", {
            minDate: "today",
            dateFormat: "Y-m-d",
            disable: disables,
            onChange: calcularTotal
          });
        });
    });

    document.getElementById("formPago").addEventListener("submit", function (e) {
      e.preventDefault();
      const entrada = document.getElementById('entrada').value;
      const salida  = document.getElementById('salida').value;
      const total   = document.getElementById('precioTotal').textContent;
      const okTerm  = document.getElementById('aceptoTerminos').checked;

      if (!entrada || !salida || total === '0.00') {
        Swal.fire({ icon: 'warning', title: 'Fechas inválidas', text: 'Selecciona un rango válido.' });
        return;
      }
      if (!okTerm) {
        Swal.fire({ icon: 'warning', title: 'Términos no aceptados', text: 'Debes aceptar los Términos y Condiciones.' });
        return;
      }

      // set hidden fields
      document.getElementById('fechaInicioInput').value = entrada;
      document.getElementById('fechaFinInput').value    = salida;
      document.getElementById('totalInput').value       = total;

      const btn = document.getElementById("btnPagar");
      btn.disabled = true; btn.innerText = 'Procesando…';
      this.submit();
    });
</script>