@model Shared.Models.CatalogoResponse
@using Microsoft.AspNetCore.Mvc.Rendering

@{
	Layout = null;
	ViewData["Title"] = "Inmuebles Disponibles";
	@Html.Partial("_NavCliente")
}



@if (Model == null)
{
	<div class="alert alert-danger text-center mt-5">
		<strong>Ocurrió un error:</strong> No se pudo cargar la información. Inténtalo nuevamente más tarde.
	</div>
	return;
}

<div class="container py-4 fade-in">
	<h2 class="text-center fw-bold mb-4 display-6">🏠 Inmuebles Disponibles</h2>

<!<!-- FORMULARIO DE FILTROS -->
<div class="container my-4">
    <form asp-action="ListarInmuebles" method="get">
        
        <!-- BARRA DE BÚSQUEDA -->
        <div class="search-bar bg-white rounded-pill shadow-sm p-2 px-3 d-flex align-items-center mb-4">
            <i class="fa-solid fa-search text-muted me-2"></i>
            <input type="text" 
                   name="filtro" 
                   class="form-control border-0 shadow-none"
                   value="@(ViewBag.Filtro ?? "")"
                   placeholder="Busca tu próximo lugar..." />
            <button type="submit" class="btn btn-dark rounded-pill px-4 ms-2">Buscar</button>
        </div>

        <!-- PANELES DE FILTROS -->
        <div id="filtros" class="bg-light rounded-4 p-4 shadow-sm border-start border-4 border-dark">
            <h5 class="fw-bold mb-3">Filtros avanzados</h5>
            
            <div class="row g-4">
                <!-- Precio desde -->
                <div class="col-md-4">
                    <label class="form-label fw-semibold">Precio desde</label>
                    <div class="input-group">
                        <span class="input-group-text">S/</span>
                        <input type="number" 
                               name="precioDesde" 
                               class="form-control"
                               value="@(ViewBag.PrecioDesde ?? "")" 
                               placeholder="0" />
                    </div>
                </div>

                <!-- Precio hasta -->
                <div class="col-md-4">
                    <label class="form-label fw-semibold">Precio hasta</label>
                    <div class="input-group">
                        <span class="input-group-text">S/</span>
                        <input type="number" 
                               name="precioHasta" 
                               class="form-control"
                               value="@(ViewBag.PrecioHasta ?? "")" 
                               placeholder="5000" />
                    </div>
                </div>

                <!-- Estado -->
                <div class="col-md-4">
                    <label for="estado" class="form-label fw-semibold">Estado</label>
                    @Html.DropDownList("estado", 
                        (List<SelectListItem>)ViewData["EstadoOptions"],
                        "Todos", 
                        new { @class = "form-select", @id = "estado" })
                </div>
            </div>

            <!-- BOTONES -->
            <div class="d-flex justify-content-end mt-4 gap-2">
                <a href="@Url.Action("ListarInmuebles", "Catalogo")" class="btn btn-outline-secondary px-4">Limpiar</a>
                <button type="submit" class="btn btn-dark px-4">Aplicar filtros</button>
            </div>
        </div>
    </form>
</div>



	@* Mensaje de sanción y link si está sancionado *@
	@if (ViewBag.MensajeSancion != null)
	{
		<div class="alert alert-warning text-center rounded-pill shadow-sm border border-warning">
			<p class="mb-1">@ViewBag.MensajeSancion</p>
			<a href="@ViewBag.LinkMotivoSancion" class="btn btn-link">Ver motivos de sanción</a>
		</div>
	}
	else
	{
		@* Mostrar lista de inmuebles solo si NO está sancionado *@
		@if (Model.Inmuebles != null && Model.Inmuebles.Any())
		{
			<div class="row g-4">
				@foreach (var inmueble in Model.Inmuebles)
				{
					<div class="col-md-4">
						<div class="card shadow-sm border-0 rounded-4 overflow-hidden h-100">
							<div class="position-relative">
								<img src="@inmueble.ImagenHabitacion" alt="Imagen" class="img-fluid w-100" style="height:220px;object-fit:cover;" />
								<span class="badge position-absolute top-0 end-0 m-2 @(inmueble.Disponibilidad == "Si" ? "bg-success" : "bg-danger")">
									@inmueble.Disponibilidad
								</span>
							</div>
							<div class="p-3 d-flex flex-column">
								<h5 class="mb-1 fw-bold">@inmueble.Nombre</h5>
								<p class="text-muted small flex-grow-1">@inmueble.Descripcion</p>
								<p class="small mb-1"><strong>Capacidad:</strong> @inmueble.Capacidad personas</p>
								<p class="small mb-1"><strong>Habitaciones:</strong> @inmueble.NumeroHabitaciones</p>
								<div class="d-flex justify-content-between align-items-center mt-2">
									<h5 class="text-primary mb-0">S/ @inmueble.PrecioPorNoche.ToString("N2")</h5>
									<a asp-action="Detalle" asp-route-id="@inmueble.IdInmueble" class="btn btn-dark rounded-pill px-4 @(inmueble.Disponibilidad != "Si" ? "disabled" : "")">
										Ver
									</a>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
		}
		else
		{
			<div class="text-center text-muted mt-5">
				<p>No hay inmuebles disponibles para mostrar.</p>
			</div>
		}

		@* Paginación *@
		@if (Model.TotalPaginas > 1)
		{
			<div class="d-flex justify-content-center mt-4">
				<nav>
					<ul class="pagination">
						@for (int i = 0; i < Model.TotalPaginas; i++)
						{
							<li class="page-item @(i + 1 == Model.PaginaActual ? "active" : "")">
								<a class="page-link"
								   href="@Url.Action("ListarInmuebles", 
									new {	pageNumber = i + 1, 
											filtro = ViewBag.Filtro,
											precioDesde = ViewBag.PrecioDesde, 
											precioHasta = ViewBag.PrecioHasta, 
											estado = ViewBag.Estado  
									})">
									@(i + 1)
								</a>
							</li>
						}
					</ul>
				</nav>
			</div>
		}
	}
</div>

@section Scripts {<script>
document.addEventListener('DOMContentLoaded', () => {
    const filtrosPanel = document.getElementById("filtros");
    const toggleFiltrosBtn = document.getElementById("btnFiltros");

    const visible = localStorage.getItem("filtrosVisible") === "true";
    if (visible) {
        filtrosPanel.classList.remove("hidden");
        toggleFiltrosBtn.textContent = "Ocultar Filtros";
    }

    toggleFiltrosBtn.addEventListener("click", () => {
        const isVisible = !filtrosPanel.classList.contains("hidden");
        if (isVisible) {
            filtrosPanel.classList.add("hidden");
            toggleFiltrosBtn.textContent = "Filtros";
            localStorage.setItem("filtrosVisible", "false");
        } else {
            filtrosPanel.classList.remove("hidden");
            toggleFiltrosBtn.textContent = "Ocultar Filtros";
            localStorage.setItem("filtrosVisible", "true");
        }
    });
});
</script>
}
